# -*- coding: utf-8 -*-
import threading
import tkinter as tk
from multiprocessing import Process
# Form implementation generated from reading ui file 'mainFrame.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from threading import Thread
from tkinter import filedialog

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem, QHeaderView

from excel import Excel
from qianniu import Qianniu


class Ui_MainWindow(object):
    excel = Excel()
    qianniu = Qianniu()

    # 线程池
    processpool = []

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 770)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 491, 741))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.dataFrom = QtWidgets.QTableWidget(self.horizontalLayoutWidget)
        self.dataFrom.setEnabled(True)
        self.dataFrom.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.dataFrom.setAutoFillBackground(True)
        self.dataFrom.setObjectName("dataFrom")
        self.dataFrom.setColumnCount(2)
        self.dataFrom.setRowCount(1)
        # 设置第一行颜色
        self.dataFrom.horizontalHeader().setStyleSheet(
            "QHeaderView::section{background-color:rgb(255, 255, 255);font:11pt '宋体';color: black;};")
        item = QtWidgets.QTableWidgetItem()
        self.dataFrom.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.dataFrom.setHorizontalHeaderItem(1, item)
        self.horizontalLayout.addWidget(self.dataFrom)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(610, 10, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(510, 50, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.yearEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.yearEdit.setGeometry(QtCore.QRect(500, 80, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.yearEdit.setFont(font)
        self.yearEdit.setObjectName("yearEdit")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(570, 85, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.monthEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.monthEdit.setGeometry(QtCore.QRect(600, 80, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.monthEdit.setFont(font)
        self.monthEdit.setObjectName("monthEdit")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(670, 85, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.dayEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.dayEdit.setGeometry(QtCore.QRect(700, 80, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.dayEdit.setFont(font)
        self.dayEdit.setObjectName("dayEdit")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(770, 85, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.yearEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.yearEdit_2.setGeometry(QtCore.QRect(500, 175, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.yearEdit_2.setFont(font)
        self.yearEdit_2.setObjectName("yearEdit_2")
        self.dayEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.dayEdit_2.setGeometry(QtCore.QRect(700, 175, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.dayEdit_2.setFont(font)
        self.dayEdit_2.setObjectName("dayEdit_2")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(670, 180, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(570, 180, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.monthEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.monthEdit_2.setGeometry(QtCore.QRect(600, 175, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.monthEdit_2.setFont(font)
        self.monthEdit_2.setObjectName("monthEdit_2")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(510, 145, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(770, 180, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.startBtn = QtWidgets.QPushButton(self.centralwidget)
        self.startBtn.setGeometry(QtCore.QRect(570, 680, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.startBtn.setFont(font)
        self.startBtn.setObjectName("startBtn")
        self.startBtn.clicked.connect(self.t_coll)
        self.uploadBtn = QtWidgets.QPushButton(self.centralwidget)
        self.uploadBtn.setGeometry(QtCore.QRect(570, 600, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.uploadBtn.setFont(font)
        self.uploadBtn.setObjectName("uploadBtn")
        self.uploadBtn.clicked.connect(self.upload_file)
        self.chooseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.chooseBtn.setGeometry(QtCore.QRect(720, 280, 70, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.chooseBtn.setFont(font)
        self.chooseBtn.setObjectName("chooseBtn")
        self.chooseBtn.clicked.connect(lambda: self.choose_file(self.chooseBtn, self.fileLocation))
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(490, 220, 311, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(610, 240, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.fileLocation = QtWidgets.QLineEdit(self.centralwidget)
        self.fileLocation.setGeometry(QtCore.QRect(500, 280, 200, 30))
        self.fileLocation.setObjectName("fileLocation")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(490, 330, 311, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.Chrome = QtWidgets.QCheckBox(self.centralwidget)
        self.Chrome.setGeometry(QtCore.QRect(500, 390, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Chrome.setFont(font)
        self.Chrome.setObjectName("Chrome")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(620, 350, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.Chrome_Edit = QtWidgets.QLineEdit(self.centralwidget)
        self.Chrome_Edit.setGeometry(QtCore.QRect(600, 390, 131, 25))
        self.Chrome_Edit.setObjectName("Chrome_Edit")
        self.Chrome_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Chrome_btn.setGeometry(QtCore.QRect(740, 390, 50, 25))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.Chrome_btn.setFont(font)
        self.Chrome_btn.setObjectName("Chrome_btn")
        self.Chrome_btn.clicked.connect(lambda: self.choose_file(self.Chrome_btn, self.Chrome_Edit))
        self.Edge = QtWidgets.QCheckBox(self.centralwidget)
        self.Edge.setGeometry(QtCore.QRect(500, 425, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Edge.setFont(font)
        self.Edge.setObjectName("Edge")
        self.Edge_Edit = QtWidgets.QLineEdit(self.centralwidget)
        self.Edge_Edit.setGeometry(QtCore.QRect(600, 425, 131, 25))
        self.Edge_Edit.setObjectName("Edge_Edit")
        self.Edge_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Edge_btn.setGeometry(QtCore.QRect(740, 425, 50, 25))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.Edge_btn.setFont(font)
        self.Edge_btn.setObjectName("Edge_btn")
        self.Edge_btn.clicked.connect(lambda: self.choose_file(self.Edge_btn, self.Edge_Edit))
        self.Firefox = QtWidgets.QCheckBox(self.centralwidget)
        self.Firefox.setGeometry(QtCore.QRect(500, 460, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Firefox.setFont(font)
        self.Firefox.setObjectName("Firefox")
        self.QQ = QtWidgets.QCheckBox(self.centralwidget)
        self.QQ.setGeometry(QtCore.QRect(500, 495, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.QQ.setFont(font)
        self.QQ.setObjectName("QQ")
        self.Firefox_Edit = QtWidgets.QLineEdit(self.centralwidget)
        self.Firefox_Edit.setGeometry(QtCore.QRect(600, 460, 131, 25))
        self.Firefox_Edit.setObjectName("Firefox_Edit")
        self.Firefox_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Firefox_btn.setGeometry(QtCore.QRect(740, 460, 50, 25))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.Firefox_btn.setFont(font)
        self.Firefox_btn.setObjectName("Firefox_btn")
        self.Firefox_btn.clicked.connect(lambda: self.choose_file(self.Firefox_btn, self.Firefox_Edit))
        self.QQ_Edit = QtWidgets.QLineEdit(self.centralwidget)
        self.QQ_Edit.setGeometry(QtCore.QRect(600, 495, 131, 25))
        self.QQ_Edit.setObjectName("QQ_Edit")
        self.QQ_btn = QtWidgets.QPushButton(self.centralwidget)
        self.QQ_btn.setGeometry(QtCore.QRect(740, 495, 50, 25))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.QQ_btn.setFont(font)
        self.QQ_btn.setObjectName("QQ_btn")
        self.QQ_btn.clicked.connect(lambda: self.choose_file(self.QQ_btn, self.QQ_Edit))
        self.Chro360 = QtWidgets.QCheckBox(self.centralwidget)
        self.Chro360.setGeometry(QtCore.QRect(500, 530, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Chro360.setFont(font)
        self.Chro360.setObjectName("Chro360")
        self.Chro360_Edit = QtWidgets.QLineEdit(self.centralwidget)
        self.Chro360_Edit.setGeometry(QtCore.QRect(600, 530, 131, 25))
        self.Chro360_Edit.setObjectName("Chro360_Edit")
        self.Chro360_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Chro360_btn.setGeometry(QtCore.QRect(740, 530, 50, 25))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.Chro360_btn.setFont(font)
        self.Chro360_btn.setObjectName("Chro360_btn")
        self.Chro360_btn.clicked.connect(lambda: self.choose_file(self.Chro360_btn, self.Chro360_Edit))
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(490, 580, 311, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "淘宝报表解析"))
        item = self.dataFrom.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "账号"))
        item = self.dataFrom.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "密码"))
        self.label.setText(_translate("MainWindow", "付款时间"))
        self.label_2.setText(_translate("MainWindow", "起始时间:"))
        self.yearEdit.setText(_translate("MainWindow", "2024"))
        self.label_3.setText(_translate("MainWindow", "年"))
        self.monthEdit.setText(_translate("MainWindow", "01"))
        self.label_4.setText(_translate("MainWindow", "月"))
        self.dayEdit.setText(_translate("MainWindow", "01"))
        self.label_5.setText(_translate("MainWindow", "日"))
        self.yearEdit_2.setText(_translate("MainWindow", "2024"))
        self.dayEdit_2.setText(_translate("MainWindow", "01"))
        self.label_6.setText(_translate("MainWindow", "月"))
        self.label_7.setText(_translate("MainWindow", "年"))
        self.monthEdit_2.setText(_translate("MainWindow", "03"))
        self.label_8.setText(_translate("MainWindow", "结束时间:"))
        self.label_9.setText(_translate("MainWindow", "日"))
        self.startBtn.setText(_translate("MainWindow", "开始采集"))
        self.uploadBtn.setText(_translate("MainWindow", "上传"))
        self.chooseBtn.setText(_translate("MainWindow", "选择"))
        self.label_10.setText(_translate("MainWindow", "文件位置"))
        self.fileLocation.setPlaceholderText(_translate("MainWindow", "Excel文件下载的默认位置"))
        self.label_11.setText(_translate("MainWindow", "浏览器"))
        self.Chrome.setText(_translate("MainWindow", "Chrome"))
        self.Chrome_btn.setText(_translate("MainWindow", "选择"))
        self.Chrome_Edit.setPlaceholderText(_translate("MainWindow", "Chrome浏览器位置"))
        self.Edge.setText(_translate("MainWindow", "Edge"))
        self.Edge_btn.setText(_translate("MainWindow", "选择"))
        self.Edge_Edit.setPlaceholderText(_translate("MainWindow", "Edge浏览器位置"))
        self.Firefox.setText(_translate("MainWindow", "火狐"))
        self.Firefox_btn.setText(_translate("MainWindow", "选择"))
        self.Firefox_Edit.setPlaceholderText(_translate("MainWindow", "火狐浏览器位置"))
        self.QQ.setText(_translate("MainWindow", "QQ"))
        self.QQ_btn.setText(_translate("MainWindow", "选择"))
        self.QQ_Edit.setPlaceholderText(_translate("MainWindow", "QQ浏览器位置"))
        self.Chro360.setText(_translate("MainWindow", "360"))
        self.Chro360_btn.setText(_translate("MainWindow", "选择"))
        self.Chro360_Edit.setPlaceholderText(_translate("MainWindow", "360浏览器位置"))

    account = []
    passwd = []

    def upload_file(self):
        '''
        上传文件
        :return:
        '''
        self.uploadBtn.setEnabled(False)
        # 实例化
        root = tk.Tk()
        root.withdraw()
        # 获取文件夹路径
        f_path = filedialog.askopenfilename()
        self.uploadBtn.setEnabled(True)
        # print('\n获取的文件地址：', f_path)
        if f_path:
            self.account.clear()
            self.passwd.clear()
            self.account, self.passwd = self.excel.get_acc(f_path)
            self.dataFrom.setRowCount(len(self.account))

            t1 = threading.Thread(target=self.fill_table)
            t1.start()

    def choose_file(self, btn, textline):
        '''
        选择文件存储路径
        :return:
        '''
        btn.setEnabled(False)
        # 实例化
        root = tk.Tk()
        root.withdraw()
        # 获取文件夹路径
        if btn == self.chooseBtn:
            f_path = filedialog.askdirectory()
        else:
            f_path = filedialog.askopenfilename()
        f_path = f_path.replace('/', '\\')
        btn.setEnabled(True)
        # 显示到输入框里
        textline.setText(f_path)

    def fill_table(self):
        # 读取空行
        for i in range(len(self.account)):
            item1 = QTableWidgetItem(self.account[i])
            self.dataFrom.setItem(i, 0, item1)
            item2 = QTableWidgetItem(self.passwd[i])
            self.dataFrom.setItem(i, 1, item2)
            self.dataFrom.viewport().update()

    def t_coll(self):
        t2 = Thread(target=self.collect)
        t2.start()

    def collect(self):
        # 起始时间
        s_year = self.yearEdit.text() if not self.yearEdit.text() == '' else '2024'
        s_month = self.monthEdit.text() if not self.monthEdit.text() == '' else '01'
        s_day = self.dayEdit.text() if not self.dayEdit.text() == '' else '01'

        # 结束时间
        e_year = self.yearEdit_2.text() if not self.yearEdit_2.text() == '' else '2024'
        e_month = self.monthEdit_2.text() if not self.monthEdit_2.text() == '' else '03'
        e_day = self.dayEdit_2.text() if not self.dayEdit_2.text() == '' else '01'

        # 文件位置
        file_location = self.fileLocation.text()
        self.qianniu.download = file_location

        if file_location == '':
            return
        if len(self.account) < len(self.web_path):
            return

        self.startBtn.setText('采集中...')
        self.startBtn.setEnabled(False)
        # 获取信息
        s_date = f'{s_year}-{s_month}-{s_day}'
        e_date = f'{e_year}-{e_month}-{e_day}'

        # 获取选中的浏览器
        self.choose_web()

        # 休眠时间
        time = 0
        j = 0
        # 使用多进程执行
        try:
            for i in range(len(self.account)):
                if j % len(self.web_path) == 0:
                    j = 0

                p = Process(target=self.qianniu.multi_pro,
                            args=(time, self.web_list[j], self.web_path[j], self.service[j], self.account[i], self.passwd[i], s_date, e_date))
                p.start()
                self.processpool.append(p)
                time += 10
                j += 1

            for i in self.processpool:
                i.join()
        finally:
            self.startBtn.setText('开始采集')
            self.startBtn.setEnabled(True)

        # for i in range(len(self.account)):
        #     self.startBtn.setText('采集中...')
        #     self.startBtn.setEnabled(False)
        #     try:
        #         # 登录
        #         self.qianniu.login(account=self.account[i], passwd=self.passwd[i])
        #         # 获取信息
        #         s_date = f'{s_year}-{s_month}-{s_day}'
        #         e_date = f'{e_year}-{e_month}-{e_day}'
        #         sum_money, data_state, order_state = self.qianniu.get_info(start_time=s_date, end_time=e_date)
        #         self.qianniu.parse_excel(location, self.account[i], self.passwd[i], sum_money, data_state, order_state)
        #     finally:
        #         self.startBtn.setText('开始采集')
        #         self.startBtn.setEnabled(True)

    web_list = []
    web_path = []
    service = []

    def choose_web(self):
        '''
        检查哪些浏览器被选中，获取对应的浏览器位置和驱动
        :return:
        '''
        if self.Chrome.isChecked():
            self.web_list.append('Chrome')
            self.web_path.append(self.Chrome_Edit.text())
            self.service.append('resources/Chrome/chromedriver.exe')
        if self.Edge.isChecked():
            self.web_list.append('Edge')
            self.web_path.append(self.Edge_Edit.text())
            self.service.append('resources/Edge/msedgedriver.exe')
        if self.Firefox.isChecked():
            self.web_list.append('Firefox')
            self.web_path.append(self.Firefox_Edit.text())
            self.service.append('resources/Firefox/geckodriver.exe')
        if self.Chro360.isChecked():
            self.web_list.append('360')
            self.web_path.append(self.Chro360_Edit.text())
            self.service.append('resources/360/chromedriver.exe')
        if self.QQ.isChecked():
            self.web_list.append('QQ')
            self.web_path.append(self.QQ_Edit.text())
            self.service.append('resources/QQ/chromedriver.exe')
